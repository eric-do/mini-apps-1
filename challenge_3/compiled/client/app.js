/*
COMPONENT LIST
App
Homepage
Registration
Address
CreditCard
Confirmation
*/

const HOMEPAGE_VIEW = 0;
const REGISTRATION_VEW = 1;
const ADDRESS_VIEW = 2;
const CREDIT_VIEW = 3;
const CONFIRMATION_VIEW = 4;

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      hasPurchased: false,
      currentView: HOMEPAGE_VIEW
    };
  }

  nextViewHandler(e) {
    e.preventDefault();
    var currentView = this.state.currentView;
    currentView++;
    this.setView(currentView);
  }

  postData(data) {
    $.ajax({
      url: 'localhost:3000',
      method: 'POST',
      data: JSON.stringify(data)
    });
  }

  resetView(e) {
    e.preventDefault();
    var currentView = 0;
    this.setView(currentView);
  }

  setView(currentView) {
    this.setState({
      currentView: currentView
    });
  }

  render() {
    if (this.state.currentView === HOMEPAGE_VIEW) {
      return React.createElement(Homepage, { onClick: this.nextViewHandler.bind(this) });
    }

    if (this.state.currentView === REGISTRATION_VEW) {
      return React.createElement(Registration, { onClick: this.nextViewHandler.bind(this) });
    }

    if (this.state.currentView === ADDRESS_VIEW) {
      return React.createElement(Address, { onClick: this.nextViewHandler.bind(this) });
    }

    if (this.state.currentView === CREDIT_VIEW) {
      return React.createElement(CreditCard, { onClick: this.nextViewHandler.bind(this) });
    }

    if (this.state.currentView === CONFIRMATION_VIEW) {
      return React.createElement(Confirmation, { onClick: this.resetView.bind(this) });
    }
  }
}

var Homepage = props => React.createElement(
  'div',
  { id: 'homepage' },
  React.createElement(
    'h1',
    null,
    'Homepage'
  ),
  React.createElement(
    'button',
    { onClick: props.onClick },
    'Checkout'
  )
);

var Registration = props => React.createElement(
  'div',
  { id: 'registration' },
  React.createElement(
    'h1',
    null,
    'Registration'
  ),
  React.createElement('input', { id: 'name', type: 'text', placeholder: 'Name' }),
  React.createElement('input', { id: 'email', type: 'text', placeholder: 'Email' }),
  React.createElement('input', { id: 'password', type: 'text', placeholder: 'Password' }),
  React.createElement(
    'button',
    { onClick: e => props.onClick(e) },
    'Next'
  )
);

var Address = props => React.createElement(
  'div',
  { id: 'address' },
  React.createElement(
    'h1',
    null,
    'Address'
  ),
  React.createElement('input', { id: 'line1', type: 'text', placeholder: 'Line 1' }),
  React.createElement('input', { id: 'line2', type: 'text', placeholder: 'Line 2' }),
  React.createElement('input', { id: 'city', type: 'text', placeholder: 'City' }),
  React.createElement('input', { id: 'state', type: 'text', placeholder: 'State' }),
  React.createElement('input', { id: 'zip', type: 'text', placeholder: 'Zip Code' }),
  React.createElement('input', { id: 'phone', type: 'text', placeholder: 'Phone number, e.g. (555)555-5555' }),
  React.createElement(
    'button',
    { onClick: e => props.onClick(e) },
    'Next'
  )
);

var CreditCard = props => React.createElement(
  'div',
  { id: 'address' },
  React.createElement(
    'h1',
    null,
    'Credit Card'
  ),
  React.createElement('input', { id: 'creditcard', type: 'text', placeholder: 'Credit card number' }),
  React.createElement('input', { id: 'expiration', type: 'text', placeholder: 'Expiration date' }),
  React.createElement('input', { id: 'cvv', type: 'text', placeholder: 'CVV' }),
  React.createElement('input', { id: 'billing-zip', type: 'text', placeholder: 'Billing zip code' }),
  React.createElement(
    'button',
    { onClick: e => props.onClick(e) },
    'Next'
  )
);

var Confirmation = props => React.createElement(
  'div',
  { id: 'confirmation' },
  React.createElement(
    'h1',
    null,
    'Confirmation'
  ),
  React.createElement(
    'button',
    { onClick: e => props.onClick(e) },
    'Purchase'
  )
);

ReactDOM.render(React.createElement(App, null), document.getElementById(`app`));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,